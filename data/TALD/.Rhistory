time <- read_tsv("time.tsv")
time_count <- time %>%
group_by(id, simset) %>%
select(id, simset) %>%
summarize(total = n())
View(time_count)
time_count <- time %>%
group_by(simset) %>%
select(id, simset) %>%
summarize(total = n())
time_count <- time %>%
select(id, simset) %>%
summarize(total = n())
time_count <- time %>%
group_by(simset) %>%
select(id, simset) %>%
summarize(total = n())
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lingtypology)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lingtypology)
time <- read_tsv("time_semantics.tsv")
table(time$ВРЕМЯ)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lingtypology)
time <- read_tsv("time_semantics.tsv")
villages <- read_tsv("tald_villages.tsv")
View(villages)
gltc <- villages %>%
select(lang, gltc_lang)
time_gltc <- merge(time, gltc, by = "lang")
View(time_gltc)
gltc <- villages %>%
select(lang, gltc_lang)%>%
filter(!duplicated(lang))
time_gltc <- merge(time, gltc, by = "lang")
View(time_gltc)
View(time)
gltc <- villages %>%
select(lang, gltc_lang)%>%
filter(!duplicated(lang))
time_gltc <- merge(time, gltc, by = "lang")
zaman <- time_gltc %>%
filter(setname == "ZAMAN")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(lingtypology)
time <- read_tsv("time_semantics.tsv")
villages <- read_tsv("tald_villages.tsv")
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
mutate(total = sum(punctual))
View(sem_name_count)
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
mutate(total = n(punctual))
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
mutate(total = n(punctual))
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual))
View(sem_name_count)
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
mutate(total = n())
View(sem_name_count)
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
mutate(total_punctual = n()) %>%
filter(!duplicated(total_punctual))
sem_name_count <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
mutate(total_punctual = n()) %>%
filter(!duplicated(total_punctual))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n())
View(name_count)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(lingtypology)
time <- read_tsv("time_semantics.tsv")
villages <- read_tsv("tald_villages.tsv")
gltc <- villages %>%
select(lang, gltc_lang)%>%
filter(!duplicated(lang))
time_gltc <- merge(time, gltc, by = "lang")
zaman <- time_gltc %>%
filter(setname == "ZAMAN")
vaxt <- time_gltc %>%
filter(setname == "VAXT")
map.feature(lang.gltc(zaman$gltc_lang),
features = zaman$setname,
color = "thistle",
width = 8) %>%
map.feature(lang.gltc(vaxt$gltc_lang),
features = vaxt$setname,
color = "black",
width = 4,
pipe.data = .)
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n())
ggplot(name_count, aes(total))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n())
ggplot(name_count, aes(x = setname, y = total, fill = setname))+
geom_bar(stat="identity", colour = "black", position = "fill")+
scale_fill_brewer(palette="BuPu")
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n())
ggplot(name_count, aes(x = setname, y = total))
ggplot(name_count, aes(y = total))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
ggplot(name_count, aes(x = setname, y = total))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
ggplot(name_count, aes(x = setname, y = total))+
geom_bar(stat="identity")+
geom_text(aes(label=setname), vjust=1.6, colour = "black", position = position_fill(1), size=3.5)+
scale_fill_brewer(palette="Dark2")+
theme_classic()
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
ggplot(name_count, aes(x = setname, y = desc(total)))+
geom_bar(stat="identity")+
theme_classic()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(lingtypology)
library(wesanderson)
time <- read_tsv("time_semantics.tsv")
villages <- read_tsv("tald_villages.tsv")
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
plot1 <- name_count %>%
mutate(setname = fct_reorder(setname, desc(total)))%>%
ggplot(aes(x = setname, y = total))+
geom_bar(stat="identity")+
theme_classic()
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()
p + theme(axis.text.x=element_text(angle=45, hjust=1))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()
p + theme(axis.text.x=element_text(angle=90, hjust=1))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()+
coord_flip()
p + theme(axis.text.x=element_text(angle=90, hjust=1))
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))%>%
filter(!is.na(setname))
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()+
coord_flip()
p + theme(axis.text.x=element_text(angle=90, hjust=1))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(lingtypology)
library(wesanderson)
library(ggpubr)
time <- read_tsv("time_semantics.tsv")
villages <- read_tsv("tald_villages.tsv")
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))%>%
filter(!is.na(setname))
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()+
coord_flip()
ggdotchart(name_count, x = "setname", y = "total",
sorting = "descending",
add = "segments",
dot.size = 6,
color = "turquoise",
xlab = "",
ylab = "",
label = "total",
rotate = TRUE)
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))%>%
filter(!is.na(setname)) %>%
filter(total<2)
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()+
coord_flip()
ggdotchart(name_count, x = "setname", y = "total",
sorting = "descending",
add = "segments",
dot.size = 6,
color = "turquoise",
xlab = "",
ylab = "",
label = "total",
rotate = TRUE)
name_count <- time_gltc %>%
select(setname) %>%
group_by(setname) %>%
mutate(total = n()) %>%
filter(!duplicated(setname))%>%
filter(!is.na(setname)) %>%
filter(total>2)
p <- ggplot(name_count, aes(x = reorder(setname, -total), y = total))+
geom_bar(stat="identity")+
theme_classic()+
coord_flip()
ggdotchart(name_count, x = "setname", y = "total",
sorting = "descending",
add = "segments",
dot.size = 6,
color = "turquoise",
xlab = "",
ylab = "",
label = "total",
rotate = TRUE)
dur_punct <- time_gltc %>%
select(setname, punctual, durative) %>%
group_by(setname) %>%
mutate(total = n())
View(dur_punct)
dur_punct <- time_gltc %>%
select(setname, punctual, durative) %>%
group_by(setname) %>%
summarize(total_dur = sum(durative))
dur_punct <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
summarize(total_dur = sum(durative)) %>%
filter(!is.na(total_dur))
dur_punct <- time_gltc %>%
select(setname, durative) %>%
group_by(setname)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
summarize(total_dur = sum(durative))
View(durative)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
filter(!is.na(durative)) %>%
summarize(total_dur = sum(durative))
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
filter(!is.na(durative)) %>%
summarize(total_dur = sum(durative))
punctual <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
summarize(total_dur = sum(punctual))
View(punctual)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
filter(!is.na(durative)) %>%
summarize(total_durative = sum(durative))
punctual <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
summarize(total_punctual = sum(punctual))
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
filter(!is.na(durative)) %>%
summarize(total_durative = sum(durative))
punctual <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
summarize(total_punctual = sum(punctual))
dur_punc <- merge(durative, punctual, by = "setname")
View(dur_punc)
durative <- time_gltc %>%
select(setname, durative) %>%
group_by(setname) %>%
filter(!is.na(durative)) %>%
summarize(total_durative = sum(durative))
punctual <- time_gltc %>%
select(setname, punctual) %>%
group_by(setname) %>%
filter(!is.na(punctual)) %>%
summarize(total_punctual = sum(punctual))
dur_punc <- full_join(durative, punctual, by = "setname")
View(dur_punc)
View(dur_punc)
library(lingglosses)
gloss_example(transliteration = "one two three"
glosses = "1 2 3",
free_translation = "")
gloss_example(transliteration = "one two three"
glosses = "1 2 3",
free_translation = "")
gloss_example(transliteration = "one two three",
glosses = "1 2 3",
free_translation = "")
gloss_example(transliteration = "one two three",
glosses = "",
free_translation = "")
install.packages("NeighborNet")
install.packages("phangorn")
install.packages("ropenblas")
R.Version()
rm(list=ls())
rm(list=ls())
library(tidyverse)
chechnya <- read_tsv("subsets/chechnya.csv")
getwd()
setwd("/home/samira/Git/master_villages/data")
chechnya <- read_tsv("subsets/chechnya.csv")
daghestan <- read_tsv("subsets/daghestan.csv")
ec_azerbaijan <- read_tsv("subsets/ec_azerbaijan.csv")
georgia <- read_tsv("subsets/georgia.csv")
ingushetia <- read_tsv("subsets/ingushetia.csv")
tat <- read_tsv("subsets/tat.csv")
new_villages <- rbind(chechnya, daghestan, ec_azerbaijan,
georgia, ingushetia, tat) %>%
filter(complete.cases(id)) %>%
filter(complete.cases(lat)) %>%
mutate(version = Sys.Date())
write_tsv(new_villages, "villages.tsv")
setwd("/home/samira/Git/master_villages/data/TALD")
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
standardlangs <- read_tsv("standard_language_datapoints.csv")
new_TALD <- rbind(TALDprep, standardlangs) %>%
mutate(dataset_version = Sys.Date())
standardlangs <- read_tsv("standard_language_datapoints.csv")
new_TALD <- rbind(TALDprep, standardlangs) %>%
mutate(dataset_version = Sys.Date())
View(TALDprep)
View(standardlangs)
setwd("/home/samira/Git/master_villages/data/TALD")
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual)) -> TALDprep
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
standardlangs <- read_tsv("standard_language_datapoints.csv")
View(TALDprep)
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual, version)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
standardlangs <- read_tsv("standard_language_datapoints.csv")
new_TALD <- rbind(TALDprep, standardlangs) %>%
mutate(dataset_version = Sys.Date())
write_tsv(new_TALD, "tald_villages.tsv")
View(new_villages)
library(tidyverse)
chechnya <- read_tsv("subsets/chechnya.csv")
daghestan <- read_tsv("subsets/daghestan.csv")
setwd("/home/samira/Git/master_villages/data")
chechnya <- read_tsv("subsets/chechnya.csv")
daghestan <- read_tsv("subsets/daghestan.csv")
ec_azerbaijan <- read_tsv("subsets/ec_azerbaijan.csv")
georgia <- read_tsv("subsets/georgia.csv")
ingushetia <- read_tsv("subsets/ingushetia.csv")
tat <- read_tsv("subsets/tat.csv")
new_villages <- rbind(chechnya, daghestan, ec_azerbaijan,
georgia, ingushetia, tat) %>%
filter(complete.cases(id)) %>%
filter(complete.cases(lat)) %>%
mutate(version = Sys.Date())
write_tsv(new_villages, "villages.tsv")
setwd("/home/samira/Git/master_villages/data/TALD")
new_villages %>%
filter(kutans == FALSE) %>%
select(-c(village_altnames, coord_source, settlement_type,
republic, region, elevation, kutans, source, page,
gltl_village_dialect, gltc_village_dialect, gltl_dialect,
gltc_dialect, dialect_comment, villagelang_comment, manual, version)) -> TALDprep
TALDprep$standard <- ""
TALDprep$default_level <- TALDprep$lang
TALDprep <- TALDprep %>%
relocate(standard, .after = family) %>%
relocate(default_level, .after = standard)
standardlangs <- read_tsv("standard_language_datapoints.csv")
new_TALD <- rbind(TALDprep, standardlangs) %>%
mutate(dataset_version = Sys.Date())
write_tsv(new_TALD, "tald_villages.tsv")
