library(dplyr)
a <- c("Arkhit1", "Arkhit1", "Arkhit2", "Botlikh")
b <- NA
ab <- data.frame(a,b)
View(ab)
c <- c("Arkhit1", "Arkhit2", "Botlikh")
d <- c(1, 2, 3)
dc <- data.frame(c,d)
cd <- data.frame(c,d)
View(cd)
merge(ab, cd)
colnames(ab)[1,] <- "ID"
colnames(ab)[1] <- "ID"
colnames(cd)[1] <- "ID"
m <- merge(ab, cd, by "ID")
m <- merge(ab, cd, by = "ID")
View(m)
words <- read_tsv("words.csv")
library(tidyr)
words <- read_tsv("words.csv")
words <- read.csv("words.csv", sep ="\t")
code <- read.csv("code.csv", sep ="\t")
code <- read.csv("codes.csv", sep ="\t")
words_code <- merge(words, code, by = "Code")
View(words_code)
words_code <- merge(code, words, by = "Code")
concepts <- words$Concept
concepts <- unique(words$Concept)
nr <- c(1:160)
concept_nr <- data.frame(nr, concepts)
View(concept_nr)
colnames(concept_nr)[2] <- "Concept"
words_code_nr <- merge(concept_nr, words_code, by = "Concepts")
View(words_code)
words_code_nr <- merge(concept_nr, words_code, by = "Concept")
View(words_code_nr)
View(code)
write.csv(words_code_nr, "full.csv", sep = "\t")
write.csv(words_code_nr, "full.csv")
write.tsv(words_code_nr, "full.csv")
write.csv(words_code_nr, "full.csv")
library(tidyverse)
groups <- read_tsv("groups.csv")
unique(groups)
library(lingtypology)
library(tidyverse)
color <- read_tsv("colortry.csv")
glot <- color[grep(color$Eng = "glot"),]
glot <- color[grep(color$Eng, "glot"),]
glot <- color[grep(color$Eng, "glot "),]
glot <- color[sub(color$Eng, "glot "),]
glot <- color[grep(color$Eng, "glot "),]
glot <- color[grep("glot "),]
glot <- read_tsv("color_glot.csv")
vill <- read_tsv("color_vill.csv")
map.feature(vill$Lang,
latitude = vill$Lat,
longitude = vill$Lon,
color = vill$Color)
map.feature(vill$Lang,
latitude = vill$Lat,
longitude = vill$Lon,
features = vill$Lang,
color = vill$Color)
map.feature(glot$Lang,
latitude = glot$Lat,
longitude = glot$Lon,
features = glot$Lang,
color = glot$Color)
View(glot)
glot <- read_tsv("color_glot.csv")
col <- read_tsv("col.csv")
View(col)
View(glot)
colnames(col)[4,] <- "Lang"
colnames(col)[,4] <- "Lang"
colnames(col)[1] <- "Lang"
glot_col <- merge(glot, col, by = 'Lang')
View(glot_col)
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y)
vill_col <- merge(vill, col, by = 'Lang')
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
color = vill_col$`Village color`)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
library(lingtypology)
library(tidyverse)
glot <- read_tsv("color_glot.csv")
col <- read_tsv("col.csv")
glot_col <- merge(glot, col, by = 'Lang')
vill <- read_tsv("color_vill.csv")
vill_col <- merge(vill, col, by = 'Lang')
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
width = 3,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
width = 10,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
width = 8,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
width = 8, opacity = 0.5,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(vill_col$Lang,
latitude = vill_col$Lat,
longitude = vill_col$Lon,
features = vill_col$Lang,
width = 8, opacity = 0.8,
color = vill_col$`Village color`) %>%
map.feature(glot_col$Lang,
latitude = glot_col$Lat,
longitude = glot_col$Lon,
features = glot_col$Lang,
color = glot_col$Color.y,
pipe.data = .)
map.feature(col$Lang,
features = col$Lang,
color = col$Color)
col <- read_tsv("col.csv")
map.feature(col$Lang,
features = col$Lang,
color = col$Color)
col$gltc <- gltc(col$Lang)
col$gltc <- gltc.lang(col$Lang)
View(col)
lang <- read_tsv("languages.csv")
lang <- lang[unique(lang$language),]
lang$gltc <- gltc.lang(lang$language)
View(lang)
lang <- read_tsv("languages.csv")
lang <- lang[!duplicated(lang$language),]
lang$gltc <- gltc.lang(lang$language)
View(lang)
write.csv(lang, "lang.csv")
setwd("~/Git/master_villages")
setwd("~/Git/master_villages/data")
setwd("~/Git/master_villages/data")
